[{"/home/daphne/projects/sec10/src/index.js":"1","/home/daphne/projects/sec10/src/App.js":"2","/home/daphne/projects/sec10/src/components/MainHeader/MainHeader.js":"3","/home/daphne/projects/sec10/src/components/Home/Home.js":"4","/home/daphne/projects/sec10/src/components/Login/Login.js":"5","/home/daphne/projects/sec10/src/components/MainHeader/Navigation.js":"6","/home/daphne/projects/sec10/src/components/UI/Card/Card.js":"7","/home/daphne/projects/sec10/src/components/UI/Button/Button.js":"8"},{"size":206,"mtime":1648532752000,"results":"9","hashOfConfig":"10"},{"size":1154,"mtime":1657712863831,"results":"11","hashOfConfig":"10"},{"size":368,"mtime":1616593928000,"results":"12","hashOfConfig":"10"},{"size":255,"mtime":1657712890414,"results":"13","hashOfConfig":"10"},{"size":4061,"mtime":1657712242931,"results":"14","hashOfConfig":"10"},{"size":571,"mtime":1616593928000,"results":"15","hashOfConfig":"10"},{"size":218,"mtime":1616593928000,"results":"16","hashOfConfig":"10"},{"size":353,"mtime":1616593928000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1gzywpi",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/home/daphne/projects/sec10/src/index.js",[],["36","37"],"/home/daphne/projects/sec10/src/App.js",["38"],"/home/daphne/projects/sec10/src/components/MainHeader/MainHeader.js",[],"/home/daphne/projects/sec10/src/components/Home/Home.js",[],"/home/daphne/projects/sec10/src/components/Login/Login.js",["39"],"\nimport React, { useState , useEffect, useReducer } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\nconst emailReducer = (state, action) => {\n  if(action.type === 'USER-INPUT'){\n    return {value: action.val, isValid:action.val.includes('@')};\n  }\n  if(action.type === 'INPUT_BLUR'){\n    return {value: state.value, isValid:action.val.includes('@')};\n  }\n  return {value: '',isValid:false}\n};\n\n const passwordReducer =(state, action) => {\n  if(action.type === 'USER_INPUT'){\n  return {value: action.val,isValid:action.val.trim().length > 6};\n}\nif(action.type === 'INPUT_BLUR'){\n  return {value: state.value, isValid:action.val.trim().length > 6};\n}\nreturn {value: '',isValid:false}\n};\n\n\nconst Login = (props) => {\n  //const [enteredEmail, setEnteredEmail] = useState('');\n  //const [emailIsValid, setEmailIsValid] = useState();\n  //const [enteredPassword, setEnteredPassword] = useState('');\n  //const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] =useReducer(emailReducer, {value:'', isValid:null,});\n\n  const[passwordState, dispatchPassword] =useReducer(passwordReducer, {value:'', isValid:null});\n\n useEffect(()=>{\n  console.log(\"Effect running\");\n  return () =>{\n    console.log(\"effect cleanUp\")\n  }\n  \n },[])\n  const {isValid:emailIsValid} =emailState;\n  const {isValid:passwordlIsValid} = passwordState;\n   \n  useEffect(()=>{\n      const identifier =setTimeout(()=>{\n        console.log(\"Checking for validity\")\n        setFormIsValid(\n          emailState.value.includes('@') && passwordState.isValid);\n        },500);\n        //cleanup function\n    return ()=>{\n      console.log(\"CleanUp\");\n      clearTimeout(identifier);\n    }\n      },[emailIsValid, passwordlIsValid]);\n  \n    \n    \n      \n  const emailChangeHandler = (event) => {\n   // setEnteredEmail(event.target.value);\n   dispatchEmail({type:'USER_INPUT', val:event.target.value});\n\n  //setFormIsValid(\n   // event.target.value.includes('@') && passwordState.isValid\n // );\n\n  }\n  \n    const passwordChangeHandler = (event) => {\n     // setEnteredPassword(event.target.value);\n     dispatchPassword({type:'USER_INPUT', val:event.target.vaue});\n     setFormIsValid(\n      emailState.isValid && event.target.value.trim().length > 6\n    );\n    }\n\n\n  const validateEmailHandler = () => {\n   //setEmailIsValid(emailState.isValid);\n   dispatchEmail({type:'INPUT_BLUR'});\n\n   //setFormIsValid(\n    //emailState.isValid && event.target.value.trim().length > 6\n    //;\n   \n  };\n \n  const validatePasswordHandler = () => {\n   // setPasswordIsValid(enteredPassword.trim().length > 6);\n   dispatchPassword({type:'INPUT_BLUR'});\n\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\n\n\nexport default Login;\n","/home/daphne/projects/sec10/src/components/MainHeader/Navigation.js",[],"/home/daphne/projects/sec10/src/components/UI/Card/Card.js",[],"/home/daphne/projects/sec10/src/components/UI/Button/Button.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":6,"column":8,"nodeType":"46","messageId":"47","endLine":6,"endColumn":14},{"ruleId":"48","severity":1,"message":"49","line":61,"column":9,"nodeType":"50","endLine":61,"endColumn":41,"suggestions":"51"},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'emailState.value' and 'passwordState.isValid'. Either include them or remove the dependency array.","ArrayExpression",["54"],"no-global-assign","no-unsafe-negation",{"desc":"55","fix":"56"},"Update the dependencies array to be: [emailIsValid, emailState.value, passwordState.isValid, passwordlIsValid]",{"range":"57","text":"58"},[1835,1867],"[emailIsValid, emailState.value, passwordState.isValid, passwordlIsValid]"]